#!/usr/bin/env groovy

@Library("com.optum.jenkins.pipeline.library@v0.2.1") _

pipeline {
    agent none
    environment {
        DOCKER_CREDENTIALS_ID = 'deploy_id'
        OPENSHIFT_CREDENTIALS_ID = 'deploy_id'
        DEVOPS_METRICS_ENABLED = 'false'
        SONAR_CREDENTIALS_ID = 'Sonar_ID'
        NPM_ID = 'npm_id'
        NODEJS_VERSION = '7.9.0'
    }

    stages {    
    stage('Run Sonar Scan for UI - non-prod internal') {
            agent {
                label 'docker-kitchensink-slave'
            }
            steps {
                withCredentials([string(credentialsId:"${env.NPM_ID}", variable:'NPM_AUTH_KEY')]){
                    command """
                    export NPM_AUTH_KEY="ped"
                    export NPM_EMAIL="email"
                    npm install
                    """
                    }
               glSonarNpmScan gitUserCredentialsId:"${env.SONAR_CREDENTIALS_ID}",
               additionalProps:['sonar.sources':'src', 'sonar.javascript.lcov.reportPath':'coverage/lcov.info', 'sonar.ts.lcov.reportpath':'coverage/lcov.info'] 
                   
            }        
        }
    }
       post {
        always {
            echo 'Email Notification'
            emailext body: "A sonar scan is completed with $currentBuild.currentResult for UHCInsights non-prod Webui code \n\n" +
                    "Please check here for more details \n" +
                    "${env.JOB_URL}",
                    subject: "$currentBuild.currentResult-UI Sonar Int Environment scan",
                    to: 'myinsights_devops_DL@ds.uhc.com'
        }
    }
}
